package ir.gonabad.taskmanagment.framework.network.mapperimport ir.gonabad.core.domain.listCategory.CategoryListimport ir.gonabad.core.domain.listCategory.ItemCategoryimport ir.gonabad.core.domain.listUser.ResultUserListimport ir.gonabad.taskmanagment.framework.network.entities.category.CategoryListEntityimport ir.gonabad.taskmanagment.framework.network.entities.category.ItemCategoryEntityimport ir.gonabad.taskmanagment.framework.network.entities.listUser.UserListEntityimport ir.gonabad.taskmanagment.framework.utils.EntityMapperimport javax.inject.Injectclass CategoryListMapper @Inject constructor() : EntityMapper<CategoryListEntity, CategoryList> {    override fun mapFromEntity(entity: CategoryListEntity): CategoryList {        return CategoryList(            status = entity.status ,            result = mapToEntityList(entity.result)        )    }    override fun mapToEntity(domainModel: CategoryList): CategoryListEntity {        return CategoryListEntity(            status = domainModel.status ,            result = mapFromEntityList(domainModel.result)        )    }    private fun mapFromEntityList(list : List<ItemCategory>) : List<ItemCategoryEntity>{        return list.map {            return@map ItemCategoryEntity(                id = it.id ,                owner = it.owner ,                title = it.title            )        }    }    private fun mapToEntityList(list : List<ItemCategoryEntity>) : List<ItemCategory>{        return list.map {            return@map ItemCategory(                id = it.id ,                owner = it.owner ,                title = it.title            )        }    }}