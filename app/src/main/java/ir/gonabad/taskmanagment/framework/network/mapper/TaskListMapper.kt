package ir.gonabad.taskmanagment.framework.network.mapperimport ir.gonabad.core.domain.ItemTaskimport ir.gonabad.core.domain.listTask.TaskListResponseimport ir.gonabad.taskmanagment.framework.network.entities.ItemTaskEntityimport ir.gonabad.taskmanagment.framework.network.entities.listTask.TaskListResponseEntityimport ir.gonabad.taskmanagment.framework.utils.EntityMapperimport javax.inject.Injectclass TaskListMapper @Inject constructor() : EntityMapper<TaskListResponseEntity, TaskListResponse> {    override fun mapFromEntity(entity: TaskListResponseEntity): TaskListResponse {        return TaskListResponse(            result = mapToEntityList(entity.result) ,            status = entity.status ,        )    }    override fun mapToEntity(domainModel: TaskListResponse): TaskListResponseEntity {        return TaskListResponseEntity(            result = mapFromEntityList(domainModel.result) ,            status = domainModel.status,        )    }    private fun mapFromEntityList(list : List<ItemTask>) : List<ItemTaskEntity>{        return list.map {            return@map ItemTaskEntity(                category_id = it.category_id ,                create_date = it.create_date ,                descreption = it.descreption ,                ending_date = it.ending_date ,                id = it.id ,                owner = it.owner ,                status = it.status ,                title = it.title ,                users = it.users            )        }    }    private fun mapToEntityList(list : List<ItemTaskEntity>) : List<ItemTask>{        return list.map {            return@map ItemTask(                category_id = it.category_id ,                create_date = it.create_date ,                descreption = it.descreption ,                ending_date = it.ending_date ,                id = it.id ,                owner = it.owner ,                status = it.status ,                title = it.title ,                users = it.users            )        }    }}