package ir.gonabad.taskmanagment.framework.network.mapperimport ir.gonabad.core.domain.addCategory.AddCategoryResponseimport ir.gonabad.core.domain.addCategory.Resultimport ir.gonabad.core.domain.addTask.AddTaskResponseimport ir.gonabad.core.domain.addTask.ResultAddTaskimport ir.gonabad.taskmanagment.framework.network.entities.addCategory.AddCategoryResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.addCategory.ResultEntityimport ir.gonabad.taskmanagment.framework.network.entities.addTask.AddTaskResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.addTask.ResultAddTaskEntityimport ir.gonabad.taskmanagment.framework.utils.EntityMapperimport javax.inject.Injectclass AddTaskMapper @Inject constructor() : EntityMapper<AddTaskResponseEntity , AddTaskResponse> {    override fun mapFromEntity(entity: AddTaskResponseEntity): AddTaskResponse {        return AddTaskResponse(            status = entity.status ,            result = ResultAddTask(                category_id = entity.result.category_id ,                id = entity.result.id ,                title = entity.result.title ,                descreption = entity.result.descreption ,                create_date = entity.result.create_date ,                ending_date = entity.result.ending_date ,                owner = entity.result.owner ,                status = entity.result.status            )        )    }    override fun mapToEntity(domainModel: AddTaskResponse): AddTaskResponseEntity {        return AddTaskResponseEntity(            status = domainModel.status ,            result = ResultAddTaskEntity(                category_id = domainModel.result.category_id ,                id = domainModel.result.id ,                title = domainModel.result.title ,                descreption = domainModel.result.descreption ,                create_date = domainModel.result.create_date ,                ending_date = domainModel.result.ending_date ,                owner = domainModel.result.owner ,                status = domainModel.result.status            )        )    }}