package ir.gonabad.taskmanagment.framework.network.mapperimport ir.gonabad.core.domain.addCategory.AddCategoryResponseimport ir.gonabad.core.domain.addCategory.Resultimport ir.gonabad.core.domain.deleteCategory.DeleteCategoryResponseimport ir.gonabad.core.domain.deleteTask.DeleteTaskResponseimport ir.gonabad.core.intractors.DeleteTaskimport ir.gonabad.taskmanagment.framework.network.entities.addCategory.AddCategoryResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.addCategory.ResultEntityimport ir.gonabad.taskmanagment.framework.network.entities.deleteCategory.DeleteCategoryResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.deleteTask.DeleteTaskResponseEntityimport ir.gonabad.taskmanagment.framework.utils.EntityMapperimport javax.inject.Injectclass DeleteTaskMapper @Inject constructor() : EntityMapper<DeleteTaskResponseEntity , DeleteTaskResponse> {    override fun mapFromEntity(entity: DeleteTaskResponseEntity): DeleteTaskResponse {        return DeleteTaskResponse(            result = entity.result ,            status = entity.status        )    }    override fun mapToEntity(domainModel: DeleteTaskResponse): DeleteTaskResponseEntity {        return DeleteTaskResponseEntity(            result = domainModel.result ,            status = domainModel.status        )    }}