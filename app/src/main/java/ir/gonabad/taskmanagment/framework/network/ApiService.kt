package ir.gonabad.taskmanagment.framework.networkimport ir.gonabad.taskmanagment.framework.network.entities.addCategory.AddCategoryResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.addTask.AddTaskResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.category.CategoryListEntityimport ir.gonabad.taskmanagment.framework.network.entities.deleteCategory.DeleteCategoryResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.deleteTask.DeleteTaskResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.deleteUser.DeleteUserResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.editTask.EditTaskResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.listTask.TaskListResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.listUser.UserListResponseEntityimport ir.gonabad.taskmanagment.framework.network.entities.login.LoginEntityimport retrofit2.http.*interface ApiService {    @POST("user/login.php")    suspend fun login(@Query("username") username : String ,@Query("password") password: String) : LoginEntity    @POST("user/register.php")    suspend fun register(        @Query("username") username : String ,        @Query("password") password: String ,        @Query("type") type: String ,        @Query("reqKey") token: String): LoginEntity    @POST("category/show.php")    suspend fun getCategory(        @Query("reqKey") token: String    ): CategoryListEntity    @POST("category/add.php")    suspend fun addCategory(        @Query("title") title: String ,        @Query("reqKey") token: String    ): AddCategoryResponseEntity    @POST("category/edit.php")    suspend fun editCategory(        @Query("id") id: String ,        @Query("title") title: String ,        @Query("reqKey") token: String    ): AddCategoryResponseEntity    @POST("category/delete.php")    suspend fun deleteCategory(        @Query("id") id: String ,        @Query("reqKey") token: String    ): DeleteCategoryResponseEntity    @POST("user/show.php")    suspend fun getUsers(        @Query("reqKey") token: String    ): UserListResponseEntity    @POST("user/delete.php")    suspend fun deleteUser(        @Query("username") username : String,        @Query("reqKey") token: String    ): DeleteUserResponseEntity    @POST("task/add.php")    suspend fun addTask(        @Query("category_id") categoryId : String,        @Query("title") title : String,        @Query("descreption") descreption : String,        @Query("status") status : String,        @Query("ending_time_stamp") days : String,        @Query("users") users : String,        @Query("reqKey") token: String    ): AddTaskResponseEntity    @POST("task/show.php")    suspend fun getListTask(        @Query("category_id") categoryId : String,        @Query("reqKey") token: String    ): TaskListResponseEntity    @POST("task/delete.php")    suspend fun deleteTask(        @Query("task_id") taskId : String,        @Query("reqKey") token: String    ): DeleteTaskResponseEntity    @POST("task/edit.php")    suspend fun editTask(        @Query("task_id") taskId : String ,        @Query("title") title : String ,        @Query("descreption") descreption : String ,        @Query("status") status : String ,        @Query("ending_time_stamp") endingTime : String ,        @Query("reqKey") reqKey : String ,    ) : EditTaskResponseEntity    @POST("task/changeStatus.php")    suspend fun changeStatus(        @Query("task_id") taskId : String ,        @Query("descreption") descreption : String ,        @Query("status") status : String ,        @Query("reqKey") reqKey : String ,    ) : EditTaskResponseEntity}