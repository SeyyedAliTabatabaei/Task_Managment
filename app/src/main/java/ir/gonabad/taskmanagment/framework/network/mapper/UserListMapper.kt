package ir.gonabad.taskmanagment.framework.network.mapperimport ir.gonabad.core.domain.listUser.ResultUserListimport ir.gonabad.core.domain.listUser.UserListResponseimport ir.gonabad.taskmanagment.framework.network.entities.listUser.UserListEntityimport ir.gonabad.taskmanagment.framework.network.entities.listUser.UserListResponseEntityimport ir.gonabad.taskmanagment.framework.utils.EntityMapperimport javax.inject.Injectclass UserListMapper @Inject constructor() : EntityMapper<UserListResponseEntity, UserListResponse> {    override fun mapFromEntity(entity: UserListResponseEntity): UserListResponse {        return UserListResponse(            result = mapToEntityList(entity.result) ,            status = entity.status        )    }    override fun mapToEntity(domainModel: UserListResponse): UserListResponseEntity {        return UserListResponseEntity(            result = mapFromEntityList(domainModel.result) ,            status = domainModel.status        )    }    private fun mapFromEntityList(list : List<ResultUserList>) : List<UserListEntity>{        return list.map {            return@map UserListEntity(                key = it.key ,                username = it.username ,                password = it.password ,                type = it.type            )        }    }    private fun mapToEntityList(list : List<UserListEntity>) : List<ResultUserList>{        return list.map {            return@map ResultUserList(                key = it.key ,                username = it.username ,                password = it.password ,                type = it.type            )        }    }}