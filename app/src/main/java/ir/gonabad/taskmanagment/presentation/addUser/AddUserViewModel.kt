package ir.gonabad.taskmanagment.presentation.addUserimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.viewModelScopeimport dagger.hilt.android.lifecycle.HiltViewModelimport ir.ghadamyaar.aminsoft.stepcounter.helper.DataStateimport ir.gonabad.core.domain.login.Loginimport ir.gonabad.core.intractors.RegisterUserimport ir.gonabad.taskmanagment.utils.BaseViewModelimport ir.gonabad.taskmanagment.utils.IsOnlineimport ir.gonabad.taskmanagment.utils.UserInfoContainerimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.flow.catchimport kotlinx.coroutines.launchimport javax.inject.Inject@HiltViewModelclass AddUserViewModel @Inject constructor(private val registerUser: RegisterUser , private val  isOnline: IsOnline) : BaseViewModel() {    val registerLiveData = MutableLiveData<DataState<Login>>()    fun register(username : String , password : String , type : String) {        viewModelScope.launch(Dispatchers.IO) {            registerLiveData.postValue(DataState.Loading)            registerUser(username , password , type , UserInfoContainer.token.toString(), isOnline.isOnline()).catch {                registerLiveData.postValue(DataState.LocalError(it.message))            }.collect {                registerLiveData.postValue(it)            }        }    }}