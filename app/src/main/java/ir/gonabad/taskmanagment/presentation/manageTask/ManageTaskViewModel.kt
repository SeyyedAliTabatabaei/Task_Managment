package ir.gonabad.taskmanagment.presentation.manageTaskimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.viewModelScopeimport dagger.hilt.android.AndroidEntryPointimport dagger.hilt.android.HiltAndroidAppimport dagger.hilt.android.lifecycle.HiltViewModelimport ir.ghadamyaar.aminsoft.stepcounter.helper.DataStateimport ir.gonabad.core.domain.addTask.AddTaskResponseimport ir.gonabad.core.domain.listUser.UserListResponseimport ir.gonabad.core.domain.login.Loginimport ir.gonabad.core.intractors.AddTaskimport ir.gonabad.core.intractors.GetUserListimport ir.gonabad.taskmanagment.utils.BaseViewModelimport ir.gonabad.taskmanagment.utils.IsOnlineimport ir.gonabad.taskmanagment.utils.UserInfoContainerimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.flow.catchimport kotlinx.coroutines.launchimport javax.inject.Inject@HiltViewModelclass ManageTaskViewModel @Inject constructor(    private val isOnline: IsOnline ,    private val getUserList: GetUserList ,    private val addTaskk: AddTask) : BaseViewModel() {    val userListLiveData = MutableLiveData<DataState<UserListResponse>>()    val addTaskLiveData = MutableLiveData<DataState<AddTaskResponse>>()    fun getUserList() {        viewModelScope.launch(Dispatchers.IO) {            userListLiveData.postValue(DataState.Loading)            getUserList(UserInfoContainer.token.toString() , isOnline.isOnline()).catch {                userListLiveData.postValue(DataState.LocalError(it.message))            }.collect {                userListLiveData.postValue(it)            }        }    }    fun addTask(categoryId : String ,title : String , des : String , days : String , status : String , users : String) {        viewModelScope.launch(Dispatchers.IO) {            addTaskLiveData.postValue(DataState.Loading)            addTaskk(categoryId , title , des , status , days , users , UserInfoContainer.token.toString() , isOnline.isOnline()).catch {                addTaskLiveData.postValue(DataState.LocalError(it.message))            }.collect {                addTaskLiveData.postValue(it)            }        }    }}