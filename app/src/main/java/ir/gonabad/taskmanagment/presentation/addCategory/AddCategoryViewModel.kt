package ir.gonabad.taskmanagment.presentation.addCategoryimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.viewModelScopeimport dagger.hilt.android.lifecycle.HiltViewModelimport ir.ghadamyaar.aminsoft.stepcounter.helper.DataStateimport ir.gonabad.core.domain.addCategory.AddCategoryResponseimport ir.gonabad.core.domain.listCategory.CategoryListimport ir.gonabad.core.intractors.AddCategoryimport ir.gonabad.core.intractors.EditCategoryimport ir.gonabad.taskmanagment.utils.BaseViewModelimport ir.gonabad.taskmanagment.utils.IsOnlineimport ir.gonabad.taskmanagment.utils.UserInfoContainerimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.flow.catchimport kotlinx.coroutines.launchimport javax.inject.Inject@HiltViewModelclass AddCategoryViewModel @Inject constructor(    private val addCategory: AddCategory ,    private val editCategory: EditCategory,    private val isOnline: IsOnline) : BaseViewModel() {    val addCategoryLiveData = MutableLiveData<DataState<AddCategoryResponse>>()    fun addCategory(title : String) {        viewModelScope.launch(Dispatchers.IO) {            addCategoryLiveData.postValue(DataState.Loading)            addCategory(title , UserInfoContainer.token.toString() , isOnline.isOnline()).catch {                addCategoryLiveData.postValue(DataState.LocalError(it.message))            }.collect {                addCategoryLiveData.postValue(it)            }        }    }    fun editCategory(id : String ,title : String) {        viewModelScope.launch(Dispatchers.IO) {            addCategoryLiveData.postValue(DataState.Loading)            editCategory(id ,title , UserInfoContainer.token.toString() , isOnline.isOnline()).catch {                addCategoryLiveData.postValue(DataState.LocalError(it.message))            }.collect {                addCategoryLiveData.postValue(it)            }        }    }}