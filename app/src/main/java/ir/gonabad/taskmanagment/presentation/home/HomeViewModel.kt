package ir.gonabad.taskmanagment.presentation.homeimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.viewModelScopeimport dagger.hilt.android.lifecycle.HiltViewModelimport ir.ghadamyaar.aminsoft.stepcounter.helper.DataStateimport ir.gonabad.core.domain.deleteCategory.DeleteCategoryResponseimport ir.gonabad.core.domain.listCategory.CategoryListimport ir.gonabad.core.domain.login.Loginimport ir.gonabad.core.intractors.DeleteCategoryimport ir.gonabad.core.intractors.GetCategoryListimport ir.gonabad.taskmanagment.framework.network.entities.category.CategoryListEntityimport ir.gonabad.taskmanagment.utils.BaseViewModelimport ir.gonabad.taskmanagment.utils.IsOnlineimport ir.gonabad.taskmanagment.utils.UserInfoContainerimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.flow.catchimport kotlinx.coroutines.launchimport javax.inject.Inject@HiltViewModelclass HomeViewModel @Inject constructor(    private val categoryList: GetCategoryList ,    private val deleteCategory: DeleteCategory,    private val isOnline: IsOnline) : BaseViewModel() {    val categoryLiveData = MutableLiveData<DataState<CategoryList>>()    val deleteCategoryLiveData = MutableLiveData<DataState<DeleteCategoryResponse>>()    fun getCategory() {        viewModelScope.launch(Dispatchers.IO) {            categoryLiveData.postValue(DataState.Loading)            categoryList(UserInfoContainer.token.toString() , isOnline.isOnline()).catch {                categoryLiveData.postValue(DataState.LocalError(it.message))            }.collect {                categoryLiveData.postValue(it)            }        }    }    fun deleteCategory(id : String) {        viewModelScope.launch(Dispatchers.IO) {            deleteCategoryLiveData.postValue(DataState.Loading)            deleteCategory(id , UserInfoContainer.token.toString() , isOnline.isOnline()).catch {                deleteCategoryLiveData.postValue(DataState.LocalError(it.message))            }.collect {                deleteCategoryLiveData.postValue(it)            }        }    }}