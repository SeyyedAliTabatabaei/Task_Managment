package ir.gonabad.taskmanagment.diimport dagger.Moduleimport dagger.Providesimport dagger.hilt.InstallInimport dagger.hilt.components.SingletonComponentimport ir.gonabad.taskmanagment.framework.db.UserLocalDataSourceImplimport ir.gonabad.taskmanagment.framework.network.ApiServiceimport ir.gonabad.taskmanagment.framework.network.UserRemoteDataSourceImplimport ir.gonabad.taskmanagment.framework.network.mapper.AddCategoryMapperimport ir.gonabad.taskmanagment.framework.network.mapper.AddTaskMapperimport ir.gonabad.taskmanagment.framework.network.mapper.CategoryListMapperimport ir.gonabad.taskmanagment.framework.network.mapper.DeleteCategoryMapperimport ir.gonabad.taskmanagment.framework.network.mapper.DeleteUserMapperimport ir.gonabad.taskmanagment.framework.network.mapper.LoginMapperimport ir.gonabad.taskmanagment.framework.network.mapper.UserListMapperimport ir.gonabad.taskmanagment.utils.PrefHandlerimport javax.inject.Singleton@Module@InstallIn(SingletonComponent::class)class DataSourceModule {    @Provides    @Singleton    fun provideUserLocalDataSource(        preferenceHandler: PrefHandler,    ): UserLocalDataSourceImpl = UserLocalDataSourceImpl(preferenceHandler)    @Provides    @Singleton    fun provideUserRemoteDataSource(        apiService: ApiService,        loginMapper: LoginMapper ,        categoryListMapper: CategoryListMapper ,        addCategoryMapper: AddCategoryMapper ,        deleteCategoryMapper: DeleteCategoryMapper ,        userListMapper: UserListMapper ,        deleteUserMapper: DeleteUserMapper ,        addTaskMapper: AddTaskMapper    ): UserRemoteDataSourceImpl =        UserRemoteDataSourceImpl(            apiService,            loginMapper ,            categoryListMapper ,            addCategoryMapper ,            deleteCategoryMapper ,            userListMapper ,            deleteUserMapper ,            addTaskMapper        )}